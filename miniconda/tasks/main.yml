---
# Tasks file for miniconda

- name: Download miniconda installer
  register: miniconda_downloaded
  get_url:
    url={{ miniconda_installer.url }}/{{ miniconda_installer.file }}
    dest=/tmp/{{ miniconda_installer.file }}
    mode=0755

- name: Get miniconda version
  shell: "head /tmp/{{ miniconda_installer.file }} | grep VER: | awk '{print $3}'"
  register: miniconda_version

- name: Set conda install directory
  set_fact:
    conda_dir: "{{ install_prefix.dir }}/miniconda-{{ miniconda_version.stdout }}"

- name: Get status of conda install directory
  stat: path="{{ conda_dir }}"
  register: conda_dir_status  

# - name: Fail if conda install directory exists
#   fail: msg="The conda install directory already exists"
#   when: conda_dir_status.stat.exists

# - name: Install miniconda into conda dir
#   command: "/tmp/{{ miniconda_installer.file }} -b -p {{ conda_dir }}"
#   args:
#     creates: "{{ conda_dir }}"
#   when: not conda_dir_status.stat.exists

# - name: Delete miniconda installer
#   file:
#     path: "/tmp/{{ miniconda_installer.file }}"
#     state: absent

- name: Set conda executable path
  set_fact:
    conda_exec: "{{ conda_dir }}/bin/conda"

- name: Get status of conda executable
  stat: path="{{ conda_exec }}"
  register: conda_exec_status  

- name: Fail if conda executable doesn't exists
  fail: msg="The conda executable doesn't exist"
  when: conda_exec_status .stat.exists == False 

- name: Update base conda packages
  shell: "{{ conda_exec }} update -y --all"
  register: conda_update_pkgs
  changed_when: conda_update_pkgs.stdout is not search('All requested packages already installed')
  failed_when: conda_update_pkgs.rc != 0

- debug:
    var: conda_dir

- debug:
    var: conda_update_pkgs
